{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/Public/Web APP/Maps-drawing/src/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css'; // Leaflet core styles\nimport 'leaflet-draw/dist/leaflet.draw.css'; // Leaflet Draw styles\nimport { Control } from 'leaflet-draw'; // Import the Control class from leaflet-draw\nimport { Box } from '@mui/material'; // Import Material-UI Box for layout\n\n// Import the image\nimport logo from '../src/images/imagelogo.png'; // Adjust the path to match your file structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeafletMap = () => {\n  _s();\n  useEffect(() => {\n    // Initialize the Leaflet map\n    const map = L.map('map').setView([51.505, -0.09], 13); // Set the center and zoom level\n\n    // Add OpenStreetMap tile layer (no API key required)\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n\n    // Initialize the Leaflet Draw plugin and add controls\n    const drawControl = new L.Control.Draw({\n      draw: {\n        polygon: true,\n        // Enable polygon drawing\n        polyline: false,\n        // Disable polyline drawing\n        rectangle: false,\n        // Disable rectangle drawing\n        circle: false,\n        // Disable circle drawing\n        marker: false // Disable marker drawing\n      },\n      edit: {\n        featureGroup: new L.FeatureGroup().addTo(map) // Store drawn polygons in this feature group\n      }\n    });\n    map.addControl(drawControl);\n\n    // Event listener for when a polygon is drawn\n    map.on('draw:created', e => {\n      const layer = e.layer;\n      const polygon = layer.toGeoJSON(); // Get the polygon as GeoJSON\n      console.log('Polygon drawn:', polygon); // Output the GeoJSON of the polygon\n      map.addLayer(layer); // Add the drawn polygon to the map\n    });\n    return () => {\n      map.remove(); // Cleanup the map when the component unmounts\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      backgroundColor: '#f0f0f0',\n      padding: '30px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: '#2e3b4e',\n        color: '#ffffff',\n        padding: '20px',\n        borderRadius: '8px',\n        maxWidth: '800px',\n        margin: '0 auto',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Flyover Drone Services\",\n        style: {\n          width: '200px',\n          height: 'auto'\n        } // You can adjust the size of the logo here\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: '100%',\n        height: '1000px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(LeafletMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LeafletMap;\nexport default LeafletMap;\nvar _c;\n$RefreshReg$(_c, \"LeafletMap\");","map":{"version":3,"names":["React","useEffect","L","Control","Box","logo","jsxDEV","_jsxDEV","LeafletMap","_s","map","setView","tileLayer","addTo","drawControl","Draw","draw","polygon","polyline","rectangle","circle","marker","edit","featureGroup","FeatureGroup","addControl","on","e","layer","toGeoJSON","console","log","addLayer","remove","style","textAlign","backgroundColor","padding","children","sx","color","borderRadius","maxWidth","margin","boxShadow","display","justifyContent","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","id","_c","$RefreshReg$"],"sources":["/home/vaibhav/Public/Web APP/Maps-drawing/src/Map.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css'; // Leaflet core styles\nimport 'leaflet-draw/dist/leaflet.draw.css'; // Leaflet Draw styles\nimport { Control } from 'leaflet-draw'; // Import the Control class from leaflet-draw\nimport { Box } from '@mui/material'; // Import Material-UI Box for layout\n\n// Import the image\nimport logo from '../src/images/imagelogo.png'; // Adjust the path to match your file structure\n\nconst LeafletMap = () => {\n  useEffect(() => {\n    // Initialize the Leaflet map\n    const map = L.map('map').setView([51.505, -0.09], 13); // Set the center and zoom level\n\n    // Add OpenStreetMap tile layer (no API key required)\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n\n    // Initialize the Leaflet Draw plugin and add controls\n    const drawControl = new L.Control.Draw({\n      draw: {\n        polygon: true, // Enable polygon drawing\n        polyline: false, // Disable polyline drawing\n        rectangle: false, // Disable rectangle drawing\n        circle: false, // Disable circle drawing\n        marker: false, // Disable marker drawing\n      },\n      edit: {\n        featureGroup: new L.FeatureGroup().addTo(map), // Store drawn polygons in this feature group\n      },\n    });\n    map.addControl(drawControl);\n\n    // Event listener for when a polygon is drawn\n    map.on('draw:created', (e) => {\n      const layer = e.layer;\n      const polygon = layer.toGeoJSON(); // Get the polygon as GeoJSON\n      console.log('Polygon drawn:', polygon); // Output the GeoJSON of the polygon\n      map.addLayer(layer); // Add the drawn polygon to the map\n    });\n\n    return () => {\n      map.remove(); // Cleanup the map when the component unmounts\n    };\n  }, []);\n\n  return (\n    <div style={{ textAlign: 'center', backgroundColor: '#f0f0f0', padding: '30px' }}>\n      {/* Box container for logo with background color */}\n      <Box \n        sx={{\n          backgroundColor: '#2e3b4e', \n          color: '#ffffff', \n          padding: '20px', \n          borderRadius: '8px',\n          maxWidth: '800px',\n          margin: '0 auto', \n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n          display: 'flex',\n          justifyContent: 'center'\n        }}\n      >\n        {/* Image logo */}\n        <img \n          src={logo} \n          alt=\"Flyover Drone Services\" \n          style={{ width: '200px', height: 'auto' }} // You can adjust the size of the logo here\n        />\n      </Box>\n\n      {/* Add space between logo and map */}\n      <div style={{ marginTop: '30px' }} />\n\n      {/* Leaflet map */}\n      <div id=\"map\" style={{ width: '100%', height: '1000px' }} />\n    </div>\n  );\n};\n\nexport default LeafletMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}