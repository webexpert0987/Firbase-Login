{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/Public/Web APP/info-track/src/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from \"react\";\nimport { GoogleMap, LoadScript, DrawingManager, Polygon } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"500px\"\n};\nconst center = {\n  lat: 37.7749,\n  // San Francisco lat\n  lng: -122.4194 // San Francisco lng\n};\nconst MapComponent = () => {\n  _s();\n  const [polygons, setPolygons] = useState([]);\n  const [currentPolygon, setCurrentPolygon] = useState(null);\n  const mapRef = useRef(null);\n  const onPolygonComplete = polygon => {\n    const path = polygon.getPath().getArray().map(latLng => ({\n      lat: latLng.lat(),\n      lng: latLng.lng()\n    }));\n    setPolygons(prevPolygons => [...prevPolygons, path]);\n    setCurrentPolygon(polygon);\n  };\n  const onPolygonClick = polygon => {\n    setCurrentPolygon(polygon);\n  };\n  const onDeletePolygon = () => {\n    if (currentPolygon) {\n      currentPolygon.setMap(null); // Remove the polygon from the map\n      setPolygons(prevPolygons => prevPolygons.filter(polygon => JSON.stringify(polygon) !== JSON.stringify(currentPolygon.getPath().getArray().map(latLng => ({\n        lat: latLng.lat(),\n        lng: latLng.lng()\n      })))));\n      setCurrentPolygon(null);\n    }\n  };\n  const onEditPolygon = () => {\n    if (currentPolygon) {\n      const path = currentPolygon.getPath();\n      path.push({\n        lat: 37.7749,\n        lng: -122.4194\n      }); // Example edit, add new point\n      setPolygons([...polygons]); // Trigger re-render with updated polygon\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyAJa9THiXu8-cwpw0FKfXNB_hrAL48ayfE\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 12,\n        onLoad: map => mapRef.current = map,\n        children: [/*#__PURE__*/_jsxDEV(DrawingManager, {\n          onPolygonComplete: onPolygonComplete,\n          options: {\n            drawingControl: true,\n            polygonOptions: {\n              fillColor: \"#FF0000\",\n              fillOpacity: 0.4,\n              strokeColor: \"#FF0000\",\n              strokeWeight: 2\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), polygons.map((polygonPath, index) => /*#__PURE__*/_jsxDEV(Polygon, {\n          paths: polygonPath,\n          onClick: () => onPolygonClick(polygonPath),\n          options: {\n            fillColor: \"#FF0000\",\n            fillOpacity: 0.4,\n            strokeColor: \"#FF0000\",\n            strokeWeight: 2\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onDeletePolygon,\n        disabled: !currentPolygon,\n        children: \"Delete Polygon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onEditPolygon,\n        disabled: !currentPolygon,\n        children: \"Edit Polygon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"nIzWOCGzlA4TLmbkyWnlvNwFUMs=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useCallback","useRef","GoogleMap","LoadScript","DrawingManager","Polygon","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MapComponent","_s","polygons","setPolygons","currentPolygon","setCurrentPolygon","mapRef","onPolygonComplete","polygon","path","getPath","getArray","map","latLng","prevPolygons","onPolygonClick","onDeletePolygon","setMap","filter","JSON","stringify","onEditPolygon","push","children","googleMapsApiKey","mapContainerStyle","zoom","onLoad","current","options","drawingControl","polygonOptions","fillColor","fillOpacity","strokeColor","strokeWeight","fileName","_jsxFileName","lineNumber","columnNumber","polygonPath","index","paths","onClick","style","paddingTop","disabled","_c","$RefreshReg$"],"sources":["/home/vaibhav/Public/Web APP/info-track/src/Map.js"],"sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\nimport {\n  GoogleMap,\n  LoadScript,\n  DrawingManager,\n  Polygon,\n} from \"@react-google-maps/api\";\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"500px\",\n};\n\nconst center = {\n  lat: 37.7749, // San Francisco lat\n  lng: -122.4194, // San Francisco lng\n};\n\nconst MapComponent = () => {\n  const [polygons, setPolygons] = useState([]);\n  const [currentPolygon, setCurrentPolygon] = useState(null);\n  const mapRef = useRef(null);\n\n  const onPolygonComplete = (polygon) => {\n    const path = polygon.getPath().getArray().map((latLng) => ({\n      lat: latLng.lat(),\n      lng: latLng.lng(),\n    }));\n    setPolygons((prevPolygons) => [...prevPolygons, path]);\n    setCurrentPolygon(polygon);\n  };\n\n  const onPolygonClick = (polygon) => {\n    setCurrentPolygon(polygon);\n  };\n\n  const onDeletePolygon = () => {\n    if (currentPolygon) {\n      currentPolygon.setMap(null); // Remove the polygon from the map\n      setPolygons((prevPolygons) =>\n        prevPolygons.filter(\n          (polygon) =>\n            JSON.stringify(polygon) !== JSON.stringify(currentPolygon.getPath().getArray().map((latLng) => ({ lat: latLng.lat(), lng: latLng.lng() })))\n        )\n      );\n      setCurrentPolygon(null);\n    }\n  };\n\n  const onEditPolygon = () => {\n    if (currentPolygon) {\n      const path = currentPolygon.getPath();\n      path.push({ lat: 37.7749, lng: -122.4194 }); // Example edit, add new point\n      setPolygons([...polygons]); // Trigger re-render with updated polygon\n    }\n  };\n\n  return (\n    <div>\n      <LoadScript googleMapsApiKey=\"AIzaSyAJa9THiXu8-cwpw0FKfXNB_hrAL48ayfE\">\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={center}\n          zoom={12}\n          onLoad={(map) => (mapRef.current = map)}\n        >\n          {/* Drawing Manager */}\n          <DrawingManager\n            onPolygonComplete={onPolygonComplete}\n            options={{\n              drawingControl: true,\n              polygonOptions: {\n                fillColor: \"#FF0000\",\n                fillOpacity: 0.4,\n                strokeColor: \"#FF0000\",\n                strokeWeight: 2,\n              },\n            }}\n          />\n\n          {/* Render Polygons */}\n          {polygons.map((polygonPath, index) => (\n            <Polygon\n              key={index}\n              paths={polygonPath}\n              onClick={() => onPolygonClick(polygonPath)}\n              options={{\n                fillColor: \"#FF0000\",\n                fillOpacity: 0.4,\n                strokeColor: \"#FF0000\",\n                strokeWeight: 2,\n              }}\n            />\n          ))}\n        </GoogleMap>\n      </LoadScript>\n\n      {/* Controls */}\n      <div style={{ paddingTop: \"10px\" }}>\n        <button onClick={onDeletePolygon} disabled={!currentPolygon}>\n          Delete Polygon\n        </button>\n        <button onClick={onEditPolygon} disabled={!currentPolygon}>\n          Edit Polygon\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}