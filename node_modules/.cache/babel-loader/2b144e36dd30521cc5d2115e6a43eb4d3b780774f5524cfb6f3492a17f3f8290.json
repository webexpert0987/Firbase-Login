{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/Public/Web APP/info-track/src/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, DrawingManager } from '@react-google-maps/api';\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst center = {\n  lat: 37.7749,\n  lng: -122.4194 // You can change this to your preferred center\n};\nconst MapComponent = () => {\n  _s();\n  const [drawingMode, setDrawingMode] = useState(null); // Start with no drawing mode\n\n  const handleToggleDrawing = () => {\n    // Toggle between drawing a polyline or disabling drawing\n    setDrawingMode(drawingMode ? null : window.google.maps.drawing.OverlayType.POLYLINE);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: drawingMode ? \"secondary\" : \"primary\",\n      onClick: handleToggleDrawing,\n      style: {\n        marginBottom: '10px'\n      },\n      children: drawingMode ? 'Stop Drawing' : 'Start Drawing Polyline'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyAJa9THiXu8-cwpw0FKfXNB_hrAL48ayfE\",\n      libraries: ['drawing'],\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 12,\n        children: /*#__PURE__*/_jsxDEV(DrawingManager, {\n          drawingMode: drawingMode,\n          onPolygonComplete: polygon => {\n            console.log(\"Polygon drawn\", polygon);\n          },\n          onPolylineComplete: polyline => {\n            console.log(\"Polyline drawn\", polyline);\n          },\n          onCircleComplete: circle => {\n            console.log(\"Circle drawn\", circle);\n          },\n          onRectangleComplete: rectangle => {\n            console.log(\"Rectangle drawn\", rectangle);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"9DOkNPK+nXenPqvTnjvWD69jT78=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","DrawingManager","Button","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MapComponent","_s","drawingMode","setDrawingMode","handleToggleDrawing","window","google","maps","drawing","OverlayType","POLYLINE","children","variant","color","onClick","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","libraries","mapContainerStyle","zoom","onPolygonComplete","polygon","console","log","onPolylineComplete","polyline","onCircleComplete","circle","onRectangleComplete","rectangle","_c","$RefreshReg$"],"sources":["/home/vaibhav/Public/Web APP/info-track/src/Map.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleMap, LoadScript, DrawingManager } from '@react-google-maps/api';\nimport { Button } from '@mui/material';\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px',\n};\n\nconst center = {\n  lat: 37.7749,\n  lng: -122.4194, // You can change this to your preferred center\n};\n\nconst MapComponent = () => {\n  const [drawingMode, setDrawingMode] = useState(null); // Start with no drawing mode\n\n  const handleToggleDrawing = () => {\n    // Toggle between drawing a polyline or disabling drawing\n    setDrawingMode(drawingMode ? null : window.google.maps.drawing.OverlayType.POLYLINE);\n  };\n\n  return (\n    <div>\n      <Button \n        variant=\"contained\" \n        color={drawingMode ? \"secondary\" : \"primary\"} \n        onClick={handleToggleDrawing}\n        style={{ marginBottom: '10px' }}\n      >\n        {drawingMode ? 'Stop Drawing' : 'Start Drawing Polyline'}\n      </Button>\n\n      <LoadScript googleMapsApiKey=\"AIzaSyAJa9THiXu8-cwpw0FKfXNB_hrAL48ayfE\" libraries={['drawing']}>\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={center}\n          zoom={12}\n        >\n          <DrawingManager\n            drawingMode={drawingMode}\n            onPolygonComplete={(polygon) => {\n              console.log(\"Polygon drawn\", polygon);\n            }}\n            onPolylineComplete={(polyline) => {\n              console.log(\"Polyline drawn\", polyline);\n            }}\n            onCircleComplete={(circle) => {\n              console.log(\"Circle drawn\", circle);\n            }}\n            onRectangleComplete={(rectangle) => {\n              console.log(\"Rectangle drawn\", rectangle);\n            }}\n          />\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,UAAU,EAAEC,cAAc,QAAQ,wBAAwB;AAC9E,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE,CAAC,QAAQ,CAAE;AAClB,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtD,MAAMiB,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACAD,cAAc,CAACD,WAAW,GAAG,IAAI,GAAGG,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,WAAW,CAACC,QAAQ,CAAC;EACtF,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACF,MAAM;MACLqB,OAAO,EAAC,WAAW;MACnBC,KAAK,EAAEX,WAAW,GAAG,WAAW,GAAG,SAAU;MAC7CY,OAAO,EAAEV,mBAAoB;MAC7BW,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,EAE/BT,WAAW,GAAG,cAAc,GAAG;IAAwB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAET3B,OAAA,CAACJ,UAAU;MAACgC,gBAAgB,EAAC,yCAAyC;MAACC,SAAS,EAAE,CAAC,SAAS,CAAE;MAAAX,QAAA,eAC5FlB,OAAA,CAACL,SAAS;QACRmC,iBAAiB,EAAE7B,cAAe;QAClCG,MAAM,EAAEA,MAAO;QACf2B,IAAI,EAAE,EAAG;QAAAb,QAAA,eAETlB,OAAA,CAACH,cAAc;UACbY,WAAW,EAAEA,WAAY;UACzBuB,iBAAiB,EAAGC,OAAO,IAAK;YAC9BC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,OAAO,CAAC;UACvC,CAAE;UACFG,kBAAkB,EAAGC,QAAQ,IAAK;YAChCH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,QAAQ,CAAC;UACzC,CAAE;UACFC,gBAAgB,EAAGC,MAAM,IAAK;YAC5BL,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEI,MAAM,CAAC;UACrC,CAAE;UACFC,mBAAmB,EAAGC,SAAS,IAAK;YAClCP,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEM,SAAS,CAAC;UAC3C;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACnB,EAAA,CA5CID,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}