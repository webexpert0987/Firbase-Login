{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/Public/Web APP/info-track/src/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { GoogleMap, LoadScript, DrawingManager } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst center = {\n  lat: 40.748817,\n  // Change to your desired latitude\n  lng: -73.985428 // Change to your desired longitude\n};\nconst apiKey = 'AIzaSyAJa9THiXu8-cwpw0FKfXNB_hrAL48ayfE'; // Add your Google Maps API key here\n\nconst MyMap = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const onLoad = useCallback(mapInstance => {\n    setMap(mapInstance);\n  }, []);\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: apiKey,\n    libraries: ['drawing'],\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 12,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      children: map && /*#__PURE__*/_jsxDEV(DrawingManager, {\n        map: map,\n        drawingMode: google.maps.drawing.OverlayType.POLYGON // Default to Polygon drawing mode\n        ,\n        onOverlayComplete: e => {\n          const overlay = e.overlay;\n          const shapeType = e.type;\n          console.log('Polygon drawn:', shapeType, overlay);\n        },\n        options: {\n          drawingControl: true,\n          drawingControlOptions: {\n            position: google.maps.ControlPosition.TOP_CENTER,\n            drawingModes: [google.maps.drawing.OverlayType.POLYGON,\n            // Allow drawing of polygons\n            google.maps.drawing.OverlayType.POLYLINE // Optional: allow polylines\n            ]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MyMap, \"cOX+qz8P8Qlgqf5uFzYTRAoc4/c=\");\n_c = MyMap;\nexport default MyMap;\nvar _c;\n$RefreshReg$(_c, \"MyMap\");","map":{"version":3,"names":["React","useState","useCallback","GoogleMap","LoadScript","DrawingManager","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","apiKey","MyMap","_s","map","setMap","onLoad","mapInstance","onUnmount","googleMapsApiKey","libraries","children","mapContainerStyle","zoom","drawingMode","google","maps","drawing","OverlayType","POLYGON","onOverlayComplete","e","overlay","shapeType","type","console","log","options","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","POLYLINE","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vaibhav/Public/Web APP/info-track/src/Map.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { GoogleMap, LoadScript, DrawingManager } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px',\n};\n\nconst center = {\n  lat: 40.748817, // Change to your desired latitude\n  lng: -73.985428, // Change to your desired longitude\n};\n\nconst apiKey = 'AIzaSyAJa9THiXu8-cwpw0FKfXNB_hrAL48ayfE'; // Add your Google Maps API key here\n\nconst MyMap = () => {\n  const [map, setMap] = useState(null);\n\n  const onLoad = useCallback((mapInstance) => {\n    setMap(mapInstance);\n  }, []);\n\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n\n  return (\n    <LoadScript googleMapsApiKey={apiKey} libraries={['drawing']}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={12}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        {map && (\n          <DrawingManager\n            map={map}\n            drawingMode={google.maps.drawing.OverlayType.POLYGON} // Default to Polygon drawing mode\n            onOverlayComplete={(e) => {\n              const overlay = e.overlay;\n              const shapeType = e.type;\n              console.log('Polygon drawn:', shapeType, overlay);\n            }}\n            options={{\n              drawingControl: true,\n              drawingControlOptions: {\n                position: google.maps.ControlPosition.TOP_CENTER,\n                drawingModes: [\n                  google.maps.drawing.OverlayType.POLYGON, // Allow drawing of polygons\n                  google.maps.drawing.OverlayType.POLYLINE, // Optional: allow polylines\n                ],\n              },\n            }}\n          />\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default MyMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,SAAS,EAAEC,UAAU,EAAEC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,SAAS;EAAE;EAChBC,GAAG,EAAE,CAAC,SAAS,CAAE;AACnB,CAAC;AAED,MAAMC,MAAM,GAAG,yCAAyC,CAAC,CAAC;;AAE1D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEpC,MAAMkB,MAAM,GAAGjB,WAAW,CAAEkB,WAAW,IAAK;IAC1CF,MAAM,CAACE,WAAW,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAGnB,WAAW,CAAC,MAAM;IAClCgB,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACH,UAAU;IAACkB,gBAAgB,EAAER,MAAO;IAACS,SAAS,EAAE,CAAC,SAAS,CAAE;IAAAC,QAAA,eAC3DjB,OAAA,CAACJ,SAAS;MACRsB,iBAAiB,EAAEjB,cAAe;MAClCG,MAAM,EAAEA,MAAO;MACfe,IAAI,EAAE,EAAG;MACTP,MAAM,EAAEA,MAAO;MACfE,SAAS,EAAEA,SAAU;MAAAG,QAAA,EAEpBP,GAAG,iBACFV,OAAA,CAACF,cAAc;QACbY,GAAG,EAAEA,GAAI;QACTU,WAAW,EAAEC,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,WAAW,CAACC,OAAQ,CAAC;QAAA;QACtDC,iBAAiB,EAAGC,CAAC,IAAK;UACxB,MAAMC,OAAO,GAAGD,CAAC,CAACC,OAAO;UACzB,MAAMC,SAAS,GAAGF,CAAC,CAACG,IAAI;UACxBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,SAAS,EAAED,OAAO,CAAC;QACnD,CAAE;QACFK,OAAO,EAAE;UACPC,cAAc,EAAE,IAAI;UACpBC,qBAAqB,EAAE;YACrBC,QAAQ,EAAEf,MAAM,CAACC,IAAI,CAACe,eAAe,CAACC,UAAU;YAChDC,YAAY,EAAE,CACZlB,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,WAAW,CAACC,OAAO;YAAE;YACzCJ,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,WAAW,CAACgB,QAAQ,CAAE;YAAA;UAE9C;QACF;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAACnC,EAAA,CA5CID,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AA8CX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}